spring.application.name=skin_me

server.port=8080

spring.datasource.url=jdbc:mysql://localhost:3306/skin.me_api
spring.datasource.username=root
spring.datasource.password=
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.hibernate.ddl-auto=update

spring.servlet.multipart.max-file-size= 5MB
spring.servlet.multipart.max-request-size = 5MB

api.prefix=/api/v1

logging.level.org.springdoc=DEBUG
logging.level.org.springframework.web=DEBUG

stripe.secret.key= sk_test_51SFqT0F7oP4dmmiHDe3sot40b6Qrhgdzn6VRk27u41GsWnFDTb1HWhLTloKv4LNGn7OWUmbmyTluyf77rObMolgu007kuQzftd
stripe.public.key= pk_test_51SFqT0F7oP4dmmiHgGP2yepmTPzTW3Q2XRhAHSUuMsVfiM80ZZA72a8XuruFoQkH2mqWQY7AIUtdmj37EbMXiUN900Pm0oXCPj

#STRIPE_SECRET_KEY = sk_test_51SFqT0F7oP4dmmiHDe3sot40b6Qrhgdzn6VRk27u41GsWnFDTb1HWhLTloKv4LNGn7OWUmbmyTluyf77rObMolgu007kuQzftd
#STRIPE_PUBLIC_KEY = pk_test_51SFqT0F7oP4dmmiHgGP2yepmTPzTW3Q2XRhAHSUuMsVfiM80ZZA72a8XuruFoQkH2mqWQY7AIUtdmj37EbMXiUN900Pm0oXCPj

auth.token.expirationInMils= 360000
auth.token.jwtSecret=9AH3XncLQ4BxZSypjG5XNpCk+pBsPwSCJVavCQojc4aVD8I79n8pTkc/pD6KlCWSyFPs77q/Czh8ZenHHDkjxA== 

# Google OAuth2 (development only - do NOT commit secrets to source control)
spring.security.oauth2.client.registration.google.client-id=732985381497-9b1i77bicachait2uqpd79vaj6bmdehf.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.google.client-name=Google

# Optional: where to redirect frontend after success. If empty, backend returns JSON with {"token":"..."}
app.oauth.frontend-url=http://localhost:5173/oauth-callback
app.oauth.base-url=http://localhost:8080